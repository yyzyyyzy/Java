## Maven 的生命周期

Maven 的生命周期定义了项目构建和发布过程中的一系列阶段，每个阶段由特定的目标（goals）组成。Maven 有三个内置的生命周期：`clean`、`default` 和 `site`。

### 1. `clean` 生命周期

用于清理项目生成的文件。

#### 主要阶段：

- **pre-clean**：执行清理前需要完成的工作。
- **clean**：移除前一次构建生成的所有文件。
- **post-clean**：执行清理后需要完成的工作。

### 2. `default` 生命周期

管理项目的构建、测试和部署。

#### 主要阶段：

- **validate**：验证项目是否正确，所有必要的信息是否可用。
- **compile**：编译项目的源代码。
- **test**：使用适当的单元测试框架测试编译的源代码。这些测试不会打包或部署代码。
- **package**：将编译好的代码打包成可分发的格式，如 JAR、WAR 文件。
- **integration-test**：在集成测试环境中处理和发布包，如果需要运行集成测试。
- **verify**：运行任何检查，以验证包是否有效并符合质量标准。
- **install**：将包安装到本地 Maven 仓库中，使得该包可以作为其他本地项目的依赖。
- **deploy**：将最终的包复制到远程 Maven 仓库中，与其他开发人员和项目共享。

### 3. `site` 生命周期

用于生成项目的站点文档。

#### 主要阶段：

- **pre-site**：执行生成站点文档前需要完成的工作。
- **site**：生成项目的站点文档。
- **post-site**：执行生成站点文档后需要完成的工作。
- **site-deploy**：将生成的站点文档部署到特定的服务器上。

### 生命周期的目标（Goals）

每个生命周期阶段可以绑定一个或多个目标（goals），这些目标定义了具体要执行的任务。例如，在 `default` 生命周期的 `compile` 阶段，`compiler:compile` 目标会被执行，用于编译项目的源代码。

### 执行生命周期阶段

当你在命令行中运行一个生命周期阶段时，Maven 会自动执行该阶段之前的所有阶段。例如：

```sh
mvn install
```

这将依次执行 `validate`、`compile`、`test`、`package`、`verify` 和 `install` 阶段。

### 总结

理解 Maven 的生命周期可以帮助你更好地控制项目的构建过程，确保每个阶段都正确执行所需的任务。通过绑定适当的目标到各个阶段，你可以自定义和扩展 Maven 的默认行为，以满足特定项目的需求。