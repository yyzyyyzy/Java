ArrayList 的底层原理
    ArrayList 基于动态数组实现，底层是一个 Object 类型的数组。
    当元素超过数组的容量时，ArrayList 会自动扩展数组的大小。扩展通常是将当前数组大小增加到原来的 1.5 倍。

主要特点：
    随机访问性能好：由于数组支持通过索引进行快速随机访问，ArrayList 在读取元素时性能非常好，时间复杂度为 O(1)。
    插入和删除效率较低：在数组中插入或删除元素时，尤其是在中间位置进行操作，需要移动后续元素，因此时间复杂度为 O(n)。
    动态扩展：当容量不足时，ArrayList 会进行扩展，扩展过程需要复制旧数组的内容到新数组，这会带来一定的性能开销。

适用场景：
    需要频繁访问元素的场景。
    元素数量变化不频繁，或主要在末尾进行添加和删除操作。