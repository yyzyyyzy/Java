HashMap 的底层实现：
    数据结构：HashMap 使用数组和链表（或红黑树，Java 8 引入）实现。
    哈希表：通过哈希表实现快速的插入、删除和查找操作。
    哈希冲突处理：解决哈希冲突的方法是链地址法（数组 + 链表），即在发生冲突时，将冲突的元素以链表形式存储在同一个数组位置上。
    无序性：HashMap 是无序的，即不保证元素的顺序。
    时间复杂度：插入、删除和查找操作的平均时间复杂度为 O(1)，在极端情况下可能会达到 O(n)（所有元素映射到同一个桶）。